---
  - name: Check Timezone
    shell: >
      timedatectl status | grep Timezone: | cut -d ':' -f 2 | cut -d '(' -f 1 | xargs
    always_run: yes
    register: timezone
    changed_when: timezone.stdout != "{{ server_timezone }}"
    when: timezone.stdout != "{{ server_timezone }}"
    notify:
    - Set timezone
  - name: Ensure vagrant user has the /vagrant directory
    file: path=/vagrant state=directory mode=0775 owner=vagrant group=wheel
  - name: Ensure vagrant user has the .ssh directory
    sudo_user: vagrant
    file: path=/home/vagrant/.ssh state=directory mode=0700 owner=vagrant group=vagrant
  - name: Ensure .ssh/known_hosts exists for vagrant
    sudo_user: vagrant
    file: path=/home/vagrant/.ssh/known_hosts state=touch mode=0600 owner=vagrant group=vagrant
  - name: Ensure .ssh/config exists for vagrant
    file: path=/home/vagrant/.ssh/config state=touch mode=0700 owner=vagrant group=vagrant
  - name: Ensure correct .ssh/config settings for vagrant
    sudo_user: vagrant
    lineinfile:
      dest: /home/vagrant/.ssh/config
      line: "{{ item.line }}"
    with_items:
      - { line: 'host github.com' }
      - { line: 'User git' }
      - { line: 'IdentityFile ~/.ssh/libdev_rsa' }
  - name: Ensure vagrant user has private machine key
    copy: src=libdev_rsa dest=/home/vagrant/.ssh/ owner=vagrant group=vagrant mode=0600
  - name: Ensure vagrant user has public machine key
    copy: src=libdev_rsa.pub dest=/home/vagrant/.ssh/ owner=vagrant group=vagrant mode=0600
  - name: Ensure .ssh/known_hosts exists for libacct
    sudo_user: libacct
    file: path=/home/libacct/.ssh/known_hosts state=touch mode=0600 owner=libacct group=libacct
  - name: Ensure .ssh/config exists for libacct
    file: path=/home/libacct/.ssh/config state=touch mode=0700 owner=libacct group=libacct
  - name: Ensure correct .ssh/config settings for libacct
    sudo_user: libacct
    lineinfile:
      dest: /home/libacct/.ssh/config
      line: "{{ item.line }}"
    with_items:
      - { line: 'host *' }
      - { line: 'ForwardAgent yes' }
  - name: Get github ssh fingerprints.
    command: ssh-keyscan github.com
    register: git_fingerprints
  - name: Add fingerprints to vagrant ssh known_hosts.
    sudo_user: vagrant
    lineinfile:
      dest: /home/vagrant/.ssh/known_hosts
      line: "{{ git_fingerprints.stdout }}"
  - name: Add fingerprints to libacct ssh known_hosts.
    sudo_user: libacct
    lineinfile:
      dest: /home/libacct/.ssh/known_hosts
      line: "{{ git_fingerprints.stdout }}"
  - name: Ensure base packages are installed.
    yum: name={{ item }} state=latest
    with_items:
    - deltarpm
    - epel-release
    - nload
    - htop
    - sysstat
    - psmisc
    - iotop
    - yum-cron
    - policycoreutils-python
    - git
    - wget
    - curl
    - tree
    - emacs-nox
    - vim
    - ack
    - tmux
    - screen
  - name: Ensure PostgreSQL Repository is installed.
    yum: name=http://yum.postgresql.org/9.4/redhat/rhel-6-x86_64/pgdg-redhat94-9.4-1.noarch.rpm state=installed
  - name: Ensure PostgreSQL client is installed.
    yum: name={{ item }} state=latest
    with_items:
    - postgresql94
    - postgresql94-jdbc
  - name: Ensure other DSpace dependency packages are installed.
    yum: name={{ item }} state=latest
    with_items:
    - java-1.8.0-openjdk
    - maven
    - ant
    - tomcat
    - tomcat-webapps
    - tomcat-admin-webapps
  - name: Ensure that nsf client dependencies are installed.
    yum: name=nfs-utils state=latest
  - name: Ensure rpcbind is started and enabled.
    service: name=rpcbind state=started enabled=yes
  - name: Mount asset store
    mount: name=/mnt/shareokdata src='10.0.0.247:/srv/shareokdata' fstype=nfs state=mounted
  # Git stuff from GitHub
  - name: Git shareok_ops.
    sudo_user: vagrant
    git: repo=git@github.com:OULibraries/shareok_ops.git
         dest=/vagrant force=yes
  - name: Ensure the existence of /srv/shareok/dspace directory
    file: path=/srv/shareok/dspace state=directory mode=0770 owner=tomcat group=wheel recurse=yes
  - name: Git shareok_dspace.
    sudo_user: vagrant
    git: repo=git@github.com:OULibraries/shareok_dspace.git
         dest=/vagrant/shareok_dspace force=yes
         version=5.x
  - name: Git shareok_handle.
    sudo_user: vagrant
    git: repo=git@github.com:OULibraries/shareok_handle.git
         dest=/srv/shareok/handle-server force=yes
  - name: Git oulib-ec2-conf.
    sudo_user: vagrant
    git: repo=git@github.com:OULibraries/oulib-ec2-conf.git
         dest=/opt/oulib-ec2 force=yes
  # Filesystem stuff.
  - name: Ensure the handle server belongs to tomcat
    file: path=/srv/shareok/handle-server state=directory mode=0755 owner=tomcat group=tomcat recurse=yes
  - name: Link the handle-server config to a location inside the dspace folder
    file: src=/srv/shareok/handle-server dest=/srv/shareok/dspace/handle-server state=link force=yes
  - name: Ensure /usr/local belongs to root:wheel 0775
    file: path=/usr/local state=directory mode=0775 owner=root group=wheel recurse=yes
  - name: Ensure vagrant user has the /vagrant/downloads directory
    file: path=/vagrant/downloads state=directory mode=0770 owner=vagrant group=wheel
  - name: Ensure scripts are executable.
    file: path=/vagrant/bin state=directory mode=0775 recurse=yes
  - name: Ensure symlink to shareok-specific config script exists.
    file: src=/vagrant/etc/shareok.conf.sh dest=/vagrant/etc/conf.sh state=link force=yes
  - name: Ensure symlink to shareok-specific Catalina exists.
    file: src=/vagrant/etc/Catalina/shareok dest=/vagrant/etc/Catalina/localhost state=link force=yes
  - name: Ensure symlink to shareok-specific tomcat.conf exists.
    file: src=/vagrant/etc/tomcat.conf dest=/usr/share/tomcat/conf/tomcat.conf state=link force=yes
  - name: Ensure symlink to shareok-specific server.xml exists.
    file: src=/vagrant/etc/tomcat-server.xml dest=/usr/share/tomcat/conf/server.xml state=link force=yes
  - name: Make the dspace web app location
    file: path="{{ dspace_run }}" state=directory mode=0755 owner=tomcat group=tomcat
  - name: Point tomcat at the dspace web app location
    command: 'cp -r /vagrant/etc/Catalina/localhost/ /usr/share/tomcat/conf/Catalina/'
  - name: Ensure the webapp belongs to tomcat
    file: path="{{ dspace_run }}" state=directory mode=0755 owner=tomcat group=tomcat recurse=yes
  - name: Ensure Tomcat is started.
    service: name=tomcat state=started enabled=yes
